#!/usr/bin/env python3

import os, sys, typing as t
sys.path.insert(0, "../")
# -- system --
from core.utils import utils
from radio.sx127x.loraSPI import loraSPI
# from radio.sx127x.sx127x import sx127x


VER: str = "2021.01.001"


class sxcli(object):

   def __init__(self):
      self.lora_spi: loraSPI = t.Any
      # self._sx127x: sx127x = sx127x()

   def read_reg(self):
      print("read_reg")

   def cls(self, tks: [] = None):
      os.system("clear")

   #
   # -- set spi vals --
   #
   def set_spi(self, tks: []):
      token_cnt: int = len(tks)
      if token_cnt != 3:
         print(f"WrongArgCount: {token_cnt} | bid, bdev, rst_pin, ss_pin")
         return 1
      # -- -- -- --
      bid, bdev, bhz = tks
      print([bid, bdev, bhz])
      self.lora_spi \
         = loraSPI(bus=int(bid), bus_dev=int(bdev), bus_hz=int(bhz))

   #
   # -- -- runner -- --
   #

   def run(self, tokens: []):
      try:
         cmd_call_name: str = str(tokens[0]).strip()
         cmd_object = getattr(self, cmd_call_name, None)
         if cmd_object is None:
            print(f"AttrNotFound: {cmd_call_name}")
            return 2
         # -- -- -- --
         cmd_call = getattr(self, cmd_call_name)
         cmd_call(tokens[1:])
      except Exception as e:
         utils.log_err(e)
      finally:
         pass

def run_cmd(buff: str):
   _sxcli: sxcli = sxcli()
   _sxcli.run(buff.split(" "))

def main():
   def __loop():
      try:
         print(f"\n[ sxcli: ver.: {VER} ]\n")
         run_cmd(input("xscli: "))
      except Exception as e:
         print(e)
   # -- -- -- --
   while True:
     __loop()


# -- -- entry point -- --
if __name__ == "__main__":
    main()
